from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, ConversationHandler, filters

# ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞, –∫—É–¥–∞ –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è –æ—Ç–≤–µ—Ç—ã
ADMIN_CHAT_ID = 493385247

# –≠—Ç–∞–ø—ã –¥–∏–∞–ª–æ–≥–∞
Q1, Q2, Q3, Q4 = range(4)

user_answers = {}

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    user_answers[user_id] = {}

    await update.message.reply_text(
        "üôè –°–ø–∞—Å–∏–±–æ –∑–∞ –¥–æ–≤–µ—Ä–∏–µ –∫ –Ω–∞—à–µ–π —Å—Ç–∞–Ω—Ü–∏–∏!\n"
        "–ú—ã —Ö–æ—Ç–∏–º —Å—Ç–∞—Ç—å –µ—â—ë –ª—É—á—à–µ, –∏ –Ω–∞–º –≤–∞–∂–Ω–æ –í–∞—à–µ –º–Ω–µ–Ω–∏–µ.\n\n"
        "1Ô∏è‚É£ –û—Ç–∫—É–¥–∞ –≤—ã –æ –Ω–∞—Å —É–∑–Ω–∞–ª–∏?",
        reply_markup=ReplyKeyboardMarkup(
            [["Instagram", "Facebook"], ["Dobry mechanik", "–î—Ä—É–≥ –ø–æ—Å–æ–≤–µ—Ç–æ–≤–∞–ª"], ["Google", "–î—Ä—É–≥–æ–µ"]],
            one_time_keyboard=True, resize_keyboard=True
        )
    )
    return Q1

async def answer_q1(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    user_answers[user_id]["–ò—Å—Ç–æ—á–Ω–∏–∫"] = update.message.text

    await update.message.reply_text(
        "2Ô∏è‚É£ –ö–∞–∫ –±—ã –í—ã –æ—Ü–µ–Ω–∏–ª–∏ –Ω–∞—à–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ –æ—Ç 1 –¥–æ 10?",
        reply_markup=ReplyKeyboardMarkup(
            [[str(i) for i in range(1, 11)]],
            one_time_keyboard=True, resize_keyboard=True
        )
    )
    return Q2

async def answer_q2(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    user_answers[user_id]["–û—Ü–µ–Ω–∫–∞"] = update.message.text

    await update.message.reply_text(
        "3Ô∏è‚É£ –•–æ—Ç–µ–ª–∏ –±—ã –í—ã –ø–µ—Ä–≤—ã–º –ø–æ–ª—É—á–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞—à–∏—Ö –∞–∫—Ü–∏—è—Ö?",
        reply_markup=ReplyKeyboardMarkup(
            [["–î–∞", "–ù–µ—Ç"]],
            one_time_keyboard=True, resize_keyboard=True
        )
    )
    return Q3

async def answer_q3(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    user_answers[user_id]["–ü–æ–ª—É—á–∞—Ç—å –∞–∫—Ü–∏–∏"] = update.message.text

    await update.message.reply_text("4Ô∏è‚É£ –ù–∞–ø–∏—à–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –í–∞—à–∏ –ø–æ–∂–µ–ª–∞–Ω–∏—è –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –Ω–∞—à–µ–≥–æ –°–¢–û:")
    return Q4

async def answer_q4(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    user_answers[user_id]["–ü–æ–∂–µ–ª–∞–Ω–∏—è"] = update.message.text

    data = user_answers[user_id]
    text = (
        f"üì© –ù–æ–≤—ã–π –æ—Ç–∑—ã–≤:\n\n"
        f"–ò—Å—Ç–æ—á–Ω–∏–∫: {data['–ò—Å—Ç–æ—á–Ω–∏–∫']}\n"
        f"–û—Ü–µ–Ω–∫–∞: {data['–û—Ü–µ–Ω–∫–∞']}/10\n"
        f"–ü–æ–ª—É—á–∞—Ç—å –∞–∫—Ü–∏–∏: {data['–ü–æ–ª—É—á–∞—Ç—å –∞–∫—Ü–∏–∏']}\n"
        f"–ü–æ–∂–µ–ª–∞–Ω–∏—è: {data['–ü–æ–∂–µ–ª–∞–Ω–∏—è']}"
    )

    await context.bot.send_message(chat_id=ADMIN_CHAT_ID, text=text)
    await update.message.reply_text("‚úÖ –°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ç–≤–µ—Ç—ã! –ú—ã —Ü–µ–Ω–∏–º –í–∞—à–µ –º–Ω–µ–Ω–∏–µ. –•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è!")

    return ConversationHandler.END

async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–û–ø—Ä–æ—Å –æ—Ç–º–µ–Ω—ë–Ω. –ï—Å–ª–∏ –∑–∞—Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–π—Ç–∏ —Å–Ω–æ–≤–∞ ‚Äî –Ω–∞–∂–º–∏—Ç–µ /start.")
    return ConversationHandler.END

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
app = ApplicationBuilder().token("8098703773:AAEXa_lfk7_8GVjWH8Roy1rz_veFNBDUqFc").build()

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∏–∞–ª–æ–≥–∞
conv_handler = ConversationHandler(
    entry_points=[CommandHandler("start", start)],
    states={
        Q1: [MessageHandler(filters.TEXT & ~filters.COMMAND, answer_q1)],
        Q2: [MessageHandler(filters.TEXT & ~filters.COMMAND, answer_q2)],
        Q3: [MessageHandler(filters.TEXT & ~filters.COMMAND, answer_q3)],
        Q4: [MessageHandler(filters.TEXT & ~filters.COMMAND, answer_q4)],
    },
    fallbacks=[CommandHandler("cancel", cancel)],
)

app.add_handler(conv_handler)

# –ó–∞–ø—É—Å–∫
app.run_polling()
